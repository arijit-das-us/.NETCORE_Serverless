import os
import sys
import snowflake.connector

if len(sys.argv) != 8:
    print("==> Incorrect # of parms. Usage: ",__file__," SnowflakeAccount Username Password Role Warehouse Database Schema")
    sys.exit(1)

sfAccount = sys.argv[1]
sfUser = sys.argv[2]
#sfPswd =''
sfPswd = sys.argv[3]

if sfPswd == '':
    import getpass
    sfPswd = getpass.getpass('Password:')

sfRole = sys.argv[4]
sfWarehouse = sys.argv[5]
sfDatabase = sys.argv[6]
sfSchema = sys.argv[7]


# Create Database MEDINSIGHT
def create_db(sfConnect):
    cur = sfConnect.cursor()
    cur.execute("create database if not exists MEDINSIGHT")
    print("==> created database: MEDINSIGHT")
    cur.close()
    
# Create Schema DBO
def create_schema(sfConnect):
    cur = sfConnect.cursor()
    cur.execute("create schema if not exists MEDINSIGHT")
    print("==> created schema: DBO")
    cur.close()

# Create Warehouse MEDINSIGHT_WH
def create_warehouse(sfConnect):
    cur = sfConnect.cursor()
    cur.execute("""
create warehouse if not exists MEDINSIGHT_WH
  server_type=standard,
  server_count=2
""")
    print("==> created warehouse: MEDINSIGHT_WH")
    cur.close()

# Create Tables
def create_tables(sfConnect):
    cur = sfConnect.cursor()

    cur.execute("CREATE OR REPLACE TABLE DIM_ADM_SRC (ADM_SRC_KEY int, ADM_SRC varchar (308)); ")
    print("==> created Table: DIM_ADM_SRC")

    cur.execute("CREATE OR REPLACE TABLE DIM_ADM_TYPE (ADM_TYPE_KEY int,ADM_TYPE varchar (303)); ")
    print("==> created Table: DIM_ADM_TYPE")

    cur.execute("CREATE OR REPLACE TABLE DIM_AVOIDABLE_ED (AVOID_ER_KEY int, AVOID_ER varchar (12)); ")
    print("==> created Table: DIM_AVOIDABLE_ED")

    cur.execute("CREATE OR REPLACE TABLE DIM_CAPITATION ( CAP_DETAIL_KEY varchar (25),CAP_TYPE varchar (25)); ")
    print("==> created Table: DIM_CAPITATION")

    cur.execute("CREATE OR REPLACE TABLE DIM_CCHG (CCHG_CAT_KEY int, CCHG_Grouping_Key int, CCHG_Grouping varchar (17), CCHG_DESC varchar (100), CCHG_CAT_CODE_AND_DESC varchar (108)); ")
    print("==> created Table: DIM_CCHG")

    cur.execute("""CREATE OR REPLACE TABLE DIM_CCHG_FLAGS ( CCHG_FLAGS_KEY bigint, CANCER_SEVERITY_DESCRIPTION varchar (25), CANCER_ACTIVE_DESCRIPTION varchar (25), CANCER_STATUS varchar (25), 
	Member_COPD_Severity varchar (25), Member_Diabetes_Status varchar (30), FREQUENT_FLYER varchar (45), HYPERTENSION_SEVERITY varchar (25), MEMBER_HIGH_OPIOID_USAGE varchar (25), 
	Member_Polypharmacy_Status varchar (22));  """)
    print("==> created Table: DIM_CCHG_FLAGS")

    cur.execute("CREATE OR REPLACE TABLE DIM_CPT_MOD_01 ( CPT_MOD_KEY smallint, CPT_MOD varchar (10),CPT_MOD_DESC varchar (550), CPT_MOD_LABEL varchar (564)); ")
    print("==> created Table: DIM_CPT_MOD_01")

    cur.execute("CREATE OR REPLACE TABLE DIM_CPT_MOD_02 ( CPT_MOD_KEY smallint, CPT_MOD varchar (10), CPT_MOD_DESC varchar (550), CPT_MOD_LABEL varchar (564)); ")
    print("==> created Table: DIM_CPT_MOD_02")

    cur.execute("""CREATE OR REPLACE TABLE DIM_CPT_PROC ( proc_code_key smallint, proc_code varchar (10), proc_desc_key bigint, proc_desc varchar (400), proc_code_lbl_key bigint, 
	proc_code_lbl varchar (413), FAMILY0_Key bigint, FAMILY0 varchar (100), FAMILY1_Key bigint, FAMILY1 varchar (200), FAMILY2_Key bigint, FAMILY2 varchar (200), CCS_KEY tinyint, 
	CCS_DESC varchar (200));  """)
    print("==> created Table: DIM_CPT_PROC")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DATE_ADMIT ( DATE_INT int,DATE_DESC varchar (13), DATE_DATE date, CAL_YR_MO int, CAL_YR_MO_DESC varchar (13), CAL_MTH_OF_YR int, 
	MTH_OF_YR_DESC varchar (13), CAL_QTR_OF_YR_KEY int, CAL_QTR_OF_YR_NAME varchar (31), CAL_QTR_KEY bigint, CAL_QTR_NAME varchar (62), CAL_YR_KEY int, CAL_YR_NAME varchar (13), 
	DAY_OF_WK int, DAY_OF_WK_DESC varchar (13), WEEKEND_FLAG int, WEEKEND_FLAG_NAME varchar (13), INCUR_CREDIBLE int, MM_CREDIBLE int, PAID_CREDIBLE int, MONTH_CREDIBLE int, 
	FISCAL_YEARMO_KEY bigint, FISCAL_YEARMO_NAME varchar (18), fiscal_quarter_of_year_key int, fiscal_quarter_of_year_name varchar (32), fiscal_quarter_key bigint, 
	fiscal_quarter_name varchar (39), fiscal_year_key bigint, fiscal_year_name varchar (13)); """)
    print("==> created Table: DIM_DATE_ADMIT")
    
    cur.execute("""CREATE OR REPLACE TABLE DIM_DATE_DISCHARGE ( DATE_INT int, DATE_DESC varchar (17), DATE_DATE date, CAL_YR_MO int, CAL_YR_MO_DESC varchar (17), CAL_MTH_OF_YR int, 
	MTH_OF_YR_DESC varchar (17), CAL_QTR_OF_YR_KEY int, CAL_QTR_OF_YR_NAME varchar (31), CAL_QTR_KEY bigint, CAL_QTR_NAME varchar (62), CAL_YR_KEY int, CAL_YR_NAME varchar (17), 
	DAY_OF_WK int, DAY_OF_WK_DESC varchar (17), WEEKEND_FLAG int, WEEKEND_FLAG_NAME varchar (17), INCUR_CREDIBLE int, MM_CREDIBLE int, PAID_CREDIBLE int, MONTH_CREDIBLE int, 
	FISCAL_YEARMO_KEY bigint, FISCAL_YEARMO_NAME varchar (18), fiscal_quarter_of_year_key int, fiscal_quarter_of_year_name varchar (32), fiscal_quarter_key bigint, 
	fiscal_quarter_name varchar (39), fiscal_year_key bigint, fiscal_year_name varchar (17)); """)
    print("==> created Table: DIM_DATE_DISCHARGE")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DATE_EBM (YEARMO_KEY int, YEARMO_NAME varchar (7), CURRENT_PERIOD_FLAG varchar (30), CURRENT_PERIOD_MINUS1_FLAG varchar (39), 
	CURRENT_PERIOD_MINUS2_FLAG varchar (39), CURRENT_PERIOD_MINUS3_FLAG varchar (39)); """)
    print("==> created Table: DIM_DATE_EBM")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DATE_EPISODE_END (CAL_YR_MO int, CAL_YR_MO_DESC varchar (7), CAL_MTH_OF_YR int, MTH_OF_YR_DESC varchar (10), CAL_QTR_OF_YR_KEY int, 
	CAL_QTR_OF_YR_NAME varchar (31), CAL_QTR_KEY bigint, CAL_QTR_NAME varchar (62), CAL_YR_KEY int, CAL_YR_NAME varchar (7), INCUR_CREDIBLE int, MM_CREDIBLE int, PAID_CREDIBLE int, 
	MONTH_CREDIBLE int, FISCAL_YEARMO_KEY bigint, FISCAL_YEARMO_NAME varchar (18), fiscal_quarter_of_year_key int, fiscal_quarter_of_year_name varchar (32), fiscal_quarter_key bigint, 
	fiscal_quarter_name varchar (39), fiscal_year_key bigint, fiscal_year_name varchar (7)); """)
    print("==> created Table: DIM_DATE_EPISODE_END")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DATE_INCURRED (DATE_INT int, DATE_DESC varchar (11), DATE_DATE date, CAL_YR_MO int, CAL_YR_MO_DESC varchar (7), CAL_MTH_OF_YR int, 
	MTH_OF_YR_DESC varchar (10), CAL_QTR_OF_YR_KEY int, CAL_QTR_OF_YR_NAME varchar (31), CAL_QTR_KEY bigint, CAL_QTR_NAME varchar (62), CAL_YR_KEY int, CAL_YR_NAME varchar (7), 
	DAY_OF_WK int, DAY_OF_WK_DESC varchar (9), WEEKEND_FLAG int, WEEKEND_FLAG_NAME varchar (7), INCUR_CREDIBLE int, MM_CREDIBLE int, PAID_CREDIBLE int, MONTH_CREDIBLE int, 
	FISCAL_YEARMO_KEY bigint, FISCAL_YEARMO_NAME varchar (18), fiscal_quarter_of_year_key int, fiscal_quarter_of_year_name varchar (32), fiscal_quarter_key bigint, 
	fiscal_quarter_name varchar (39), fiscal_year_key bigint, fiscal_year_name varchar (7), R_12_L0 bigint, R_12_L1 bigint, R_12_L2 bigint, R_12_L3 bigint, R_6_L0 bigint, R_6_L1 bigint, 
	R_6_L2 bigint, R_6_L3 bigint, R_3_L0 bigint, R_3_L1 bigint, R_3_L2 bigint, R_3_L3 bigint, YTD_FULL_L0 bigint, YTD_FULL_L1 bigint, YTD_FULL_L2 bigint, YTD_FULL_L3 bigint, YTD_L0 bigint, 
	YTD_L1 bigint, YTD_L2 bigint, YTD_L3 bigint, CURRENT_MONTH_FLAG varchar (17), CURRENT_MONTH_L1_FLAG varchar (23), CURRENT_MONTH_L2_FLAG varchar (23), CURRENT_MONTH_L3_FLAG varchar (23), 
	R_12_L0_LABEL varchar (43), R_12_L1_LABEL varchar (43), R_12_L2_LABEL varchar (43), R_12_L3_LABEL varchar (43), R_6_L0_LABEL varchar (43), R_6_L1_LABEL varchar (43), 
	R_6_L2_LABEL varchar (43), R_6_L3_LABEL varchar (43), R_3_L0_LABEL varchar (43), R_3_L1_LABEL varchar (43), R_3_L2_LABEL varchar (43), R_3_L3_LABEL varchar (43), YTD_FULL_L0_LABEL varchar (43), 
	YTD_FULL_L1_LABEL varchar (43), YTD_FULL_L2_LABEL varchar (43), YTD_FULL_L3_LABEL varchar (43), YTD_L0_LABEL varchar (43), YTD_L1_LABEL varchar (43), YTD_L2_LABEL varchar (43), 
	YTD_L3_LABEL varchar (43)); """)
    print("==> created Table: DIM_DATE_INCURRED")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DATE_PAID (DATE_INT int, DATE_DESC varchar (12), DATE_DATE date, CAL_YR_MO int, CAL_YR_MO_DESC varchar (12), CAL_MTH_OF_YR int, MTH_OF_YR_DESC varchar (12), 
	CAL_QTR_OF_YR_KEY int, CAL_QTR_OF_YR_NAME varchar (31), CAL_QTR_KEY bigint, CAL_QTR_NAME varchar (62), CAL_YR_KEY int, CAL_YR_NAME varchar (12), DAY_OF_WK int, DAY_OF_WK_DESC varchar (12), 
	WEEKEND_FLAG int, WEEKEND_FLAG_NAME varchar (12), INCUR_CREDIBLE int, MM_CREDIBLE int, PAID_CREDIBLE int, MONTH_CREDIBLE int, FISCAL_YEARMO_KEY bigint, FISCAL_YEARMO_NAME varchar (18), 
	fiscal_quarter_of_year_key int, fiscal_quarter_of_year_name varchar (32), fiscal_quarter_key bigint, fiscal_quarter_name varchar (39), fiscal_year_key bigint, fiscal_year_name varchar (12), 
	R_12_L0 bigint, R_12_L1 bigint, R_12_L2 bigint, R_12_L3 bigint, R_6_L0 bigint, R_6_L1 bigint, R_6_L2 bigint, R_6_L3 bigint, R_3_L0 bigint, R_3_L1 bigint, R_3_L2 bigint, R_3_L3 bigint, 
	YTD_FULL_L0 bigint, YTD_FULL_L1 bigint, YTD_FULL_L2 bigint, YTD_FULL_L3 bigint, YTD_L0 bigint, YTD_L1 bigint, YTD_L2 bigint, YTD_L3 bigint, CURRENT_MONTH_FLAG varchar (17), 
	CURRENT_MONTH_L1_FLAG varchar (23), CURRENT_MONTH_L2_FLAG varchar (23), CURRENT_MONTH_L3_FLAG varchar (23), R_12_L0_LABEL varchar (43), R_12_L1_LABEL varchar (43), R_12_L2_LABEL varchar (43), 
	R_12_L3_LABEL varchar (43), R_6_L0_LABEL varchar (43), R_6_L1_LABEL varchar (43), R_6_L2_LABEL varchar (43), R_6_L3_LABEL varchar (43), R_3_L0_LABEL varchar (43), R_3_L1_LABEL varchar (43), 
	R_3_L2_LABEL varchar (43), R_3_L3_LABEL varchar (43), YTD_FULL_L0_LABEL varchar (43), YTD_FULL_L1_LABEL varchar (43), YTD_FULL_L2_LABEL varchar (43), YTD_FULL_L3_LABEL varchar (43), 
	YTD_L0_LABEL varchar (43), YTD_L1_LABEL varchar (43), YTD_L2_LABEL varchar (43), YTD_L3_LABEL varchar (43));  """)
    print("==> created Table: DIM_DATE_PAID")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DIAGNOSIS_ICD (ICD_DIAG_KEY int, ICD_DIAG_SORT_KEY bigint, ICD_DIAG_TYPE_KEY int, ICD_DIAG_TYPE varchar (7), ICD_DIAG varchar (10), 
    ICD_DIAG_DESC varchar (300), ICD_DIAG_CODE_AND_DESC varchar (313), ICD_DIAG_ROLLUP_KEY bigint, ICD_DIAG_ROLLUP_DESC varchar (150), CCSDX_LVL_1_KEY bigint, ICD_DIAG_CCS_LVL_1_DESC varchar (150), 
	CCSDX_LVL_1_LABEL varchar (150), CCSDX_LVL_2_KEY bigint, ICD_DIAG_CCS_LVL_2_DESC varchar (150), CCSDX_LVL_2_LABEL varchar (150), CCSDX_LVL_3_KEY bigint, ICD_DIAG_CCS_LVL_3_DESC varchar (150), 
	CCSDX_LVL_3_LABEL varchar (150));""")
    print("==> created Table: DIM_DIAGNOSIS_ICD")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DIS_STAT (DIS_STAT_KEY tinyint, DIS_STAT varchar (10), DIS_STAT_DESC varchar (100)); """)
    print("==> created Table: DIM_DIS_STAT")

    cur.execute("""CREATE OR REPLACE TABLE DIM_DRG ( 	DRG_KEY smallint, 
	DRG_TYPE char (3), 
	DRG_CODE varchar (10), 
	DRG_DESC varchar (100), 
	DRG_LBL varchar (113), 
	MDC_CODE varchar (3), 
	MDC_DESC varchar (100));  """)
    print("==> created Table: DIM_DRG")

    cur.execute("""CREATE OR REPLACE TABLE DIM_EBM ( 	EBM_Key bigint, 
	EBM_Measure_ID varchar (50), 
	EBM_Pop_ID varchar (50), 
	EMB_Measure_Name varchar (200), 
	EBM_Measure_Label varchar (253), 
	CI_MEASURE_CAT varchar (50), 
	CI_SOURCE varchar (50), 
	CI_STATISTIC varchar (50), 
	CI_NUMERATOR_DESC varchar (300), 
	ABC_BENCHMARK int, 
	INVERTED_MEASURE int, 
	Qual_Flag_Key int, 
	Qual_Flag_Name varchar (27));  """)
    print("==> created Table: DIM_EBM")

    cur.execute("""CREATE OR REPLACE TABLE DIM_ETG ( 	DIM_ETG_KEY bigint, 
	ETG_KEY int, 
	ETG varchar (10), 
	ETG_LONG_DESCRIPTION varchar (255), 
	ETG_SHORT_DESCRIPTION varchar (255), 
	ETG_SHORT_LABEL varchar (267), 
	BASE_ETG_KEY bigint, 
	BASE_ETG varchar (10), 
	BASE_ETG_SHORT_DESCRIPTION varchar (255), 
	BASE_ETG_LONG_DESCRIPTION varchar (255), 
	BASE_ETG_SHORT_LABEL varchar (264), 
	ETG_MAJOR_PRACTICE_CATEGORY_KEY bigint, 
	ETG_MAJOR_PRACTICE_CATEGORY varchar (75), 
	CHRONIC_INDICATOR varchar (1), 
	ETG_EPISODE_TYPE int, 
	ETG_EPISODE_TYPE_DESC varchar (315), 
	ETG_EPISODE_TYPE_GROUP_KEY bigint, 
	ETG_EPISODE_TYPE_GROUP varchar (20), 
	ETG_SEVERITY int, 
	ETG_SEVERITY_NAME varchar (41), 
	ETG_OUTLIER_STATUS int, 
	ETG_OUTLIER_STATUS_DESC varchar (50)); """)
    print("==> created Table: DIM_ETG")

    cur.execute("""CREATE OR REPLACE TABLE DIM_GROUP ( 	UD00_Key int, 
	GL01_LBL_NONCONS varchar (100), 
	GL02_LBL_NONCONS varchar (100), 
	GL03_LBL_NONCONS varchar (100), 
	GL04_LBL_NONCONS varchar (100), 
	GL01_LBL varchar (200), 
	GL02_LBL varchar (200), 
	GL03_LBL varchar (200), 
	GL04_LBL varchar (200), 
	GRP_TYPE varchar (100), 
	GRP_ID varchar (30), 
	_GRP_UDF_01_ varchar (100), 
	_GRP_UDF_02_ varchar (100), 
	_GRP_UDF_03_ varchar (100), 
	_GRP_UDF_04_ varchar (100), 
	_GRP_UDF_05_ varchar (100), 
	_GRP_UDF_06_ varchar (100), 
	_GRP_UDF_07_ varchar (100), 
	_GRP_UDF_08_ varchar (100), 
	_GRP_UDF_09_ varchar (100), 
	_GRP_UDF_10_ varchar (100), 
	_GRP_UDF_11_ varchar (100), 
	_GRP_UDF_12_ varchar (100), 
	_GRP_UDF_13_ varchar (100), 
	_GRP_UDF_14_ varchar (100), 
	_GRP_UDF_15_ varchar (100), 
	_GRP_UDF_16_ varchar (100), 
	_GRP_UDF_17_ int, 
	_GRP_UDF_18_ varchar (200), 
	_GRP_UDF_19_ varchar (10), 
	_GRP_UDF_20_ bigint, 
	_GRP_UDF_21_ varchar (100), 
	_GRP_UDF_22_ varchar (200), 
	_GRP_UDF_23_ varchar (200)); """)
    print("==> created Table: DIM_GROUP")

    cur.execute("""CREATE OR REPLACE TABLE DIM_GRVU_INDICATOR ( 	DIM_KEY int, 
	Description varchar (3));  """)
    print("==> created Table: DIM_GRVU_INDICATOR")

    cur.execute("""CREATE OR REPLACE TABLE DIM_HCC_MODEL ( 	HCC_MODEL_KEY int, 
	HCC_MODEL varchar (40) );  """)
    print("==> created Table: DIM_HCC_MODEL")

    cur.execute("""CREATE OR REPLACE TABLE DIM_HCG ( 	MR_LINE_KEY smallint, 
	CODE_SET_YEAR char (4), 
	HCG_DETAIL_CODE varchar (10), 
	HCG_DETAIL_DESC varchar (100), 
	HCG_DETAIL_LABEL varchar (113), 
	HCG_LINE_CODE varchar (4), 
	HCG_LINE_DESC varchar (100), 
	HCG_LINE_LABEL varchar (107), 
	HCG_SETTING_KEY int, 
	HCG_SETTING char (4), 
	HCG_SETTING_LABEL varchar (22), 
	SVC_TYPE_KEY int, 
	SVC_TYPE_LBL nvarchar (100), 
	CASE_SOURCE varchar (15), 
	CASE_BASIS char (7), 
	UTIL_SOURCE varchar (15), 
	UTIL_BASIS char (7), 
	PROD_TYPE varchar (20));  """)
    print("==> created Table: DIM_HCG")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MARA ( 	MARACLASS_KEY int, 
	MARACLASS_LABEL varchar (110), 
	MARACLASS_ID_KEY bigint, 
	MARACLASS_ID varchar (7), 
	MARACLASS_NAME_KEY bigint, 
	MARACLASS_NAME varchar (100), 
	MARA_SUMMARY_GROUP_DESCRIPTION varchar (100), 
	MARACLASS_SUMMARY_GROUP_DESCRIPTION_KEY bigint, 
	MARA_AHRQ_CHRONIC varchar (20), 
	MARACLASS_AHRQ_CHRONIC_KEY bigint, 
	MARA_AHRQ_COMMON_CHRONIC varchar (40), 
	MARA_AHRQ_COMMON_CHRONIC_KEY bigint);  """)
    print("==> created Table: DIM_MARA")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MED_HOME ( 	MED_HOME_ID_KEY smallint, 
	MED_HOME_ID varchar (100) );  """)
    print("==> created Table: DIM_MED_HOME")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEDICARE_INDICATOR ( 	DIM_KEY int, 
	Description varchar (3));  """)
    print("==> created Table: DIM_MEDICARE_INDICATOR")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER ( 	MEMBER_KEY int, 
	MEMBER_UDF_KEY int, 
	MEMBER_ID_KEY bigint, 
	MEMBER_ID varchar (200), 
	MEMBER_ID_ENCRYPTED_KEY bigint, 
	MEMBER_ID_ENCRYPTED varchar (200), 
	MEM_START_DATE date, 
	MEM_END_DATE date, 
	MEM_GENDER char (1), 
	MEM_SSN varchar (200), 
	MEM_FULLNAME varchar (404), 
	MEM_FIRSTNAME varchar (200), 
	MEM_LASTNAME varchar (200), 
	MEM_ID_FULLNAME varchar (607), 
	MEM_DOB date, 
	MEM_MEDICARE varchar (12), 
	MEM_ADDR1 varchar (80), 
	MEM_ADDR2 varchar (50), 
	MEM_CITY varchar (30), 
	MEM_COUNTY varchar (45), 
	MEM_STATE varchar (2), 
	MEM_ZIP char (5), 
	Potential_High_Cost_Member_key int, 
	MI_PERSON_KEY int, 
	_MEM_UDF_05_KEY bigint, 
	_MEM_UDF_05_ varchar (200), 
	_MEM_UDF_09_KEY bigint, 
	_MEM_UDF_09_ varchar (200), 
	_MEM_UDF_14_KEY bigint, 
	_MEM_UDF_14_ varchar (200), 
	_MEM_UDF_21_KEY bigint, 
	_MEM_UDF_21_ varchar (200), 
	_MEM_UDF_33_KEY bigint, 
	_MEM_UDF_33_ varchar (200), 
	_MEM_UDF_03_ varchar (30), 
	_MEM_UDF_07_ varchar (30), 
	_MEM_UDF_08_ varchar (30), 
	_MEM_UDF_10_ varchar (30), 
	_MEM_UDF_11_ varchar (30), 
	_MEM_UDF_12_ varchar (30), 
	_MEM_UDF_13_ varchar (30), 
	_MEM_UDF_15_ varchar (30), 
	_MEM_UDF_16_ varchar (30), 
	_MEM_UDF_17_ varchar (30), 
	_MEM_UDF_24_ varchar (30), 
	_MEM_UDF_25_ varchar (30), 
	_MEM_UDF_26_ varchar (30), 
	_MEM_UDF_28_ varchar (30), 
	_MEM_UDF_29_ varchar (30), 
	_MEM_UDF_30_ varchar (30), 
	_MEM_UDF_31_ varchar (30), 
	_MEM_UDF_32_ varchar (30), 
	_MEM_UDF_37_ varchar (30)); """)
    print("==> created Table: DIM_MEMBER")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER_INFO_AGE ( 	AGE int, 
	AGE_BAND_NAME varchar (43));  """)
    print("==> created Table: DIM_MEMBER_INFO_AGE")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER_INFO_GENDER ( 	GENDER varchar (1));  """)
    print("==> created Table: DIM_MEMBER_INFO_GENDER")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER_INFO_GEO ( 	ZIP5 varchar (10), 
	ZIP3 varchar (7), 
	COUNTY varchar (50), 
	STATE varchar (55), 
	MSA_NAME varchar (60));  """)
    print("==> created Table: DIM_MEMBER_INFO_GEO")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER_INFO_RELATION ( 	RELATION_KEY int, 
	RELATION_DET_CODE varchar (20), 
	RELATION_DET_DESC varchar (100), 
	RELATION_GRP_KEY int, 
	RELATION_GRP_DESC varchar (10));  """)
    print("==> created Table: DIM_MEMBER_INFO_RELATION")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER_INFO_STAT ( 	MEM_STAT_KEY int, 
	MEM_STAT varchar (10));  """)
    print("==> created Table: DIM_MEMBER_INFO_STAT")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MEMBER_INFO_TIER ( 	TIER_KEY int, 
	TIER varchar (50), 
	TIER_ROLLUP1 varchar (50));  """)
    print("==> created Table: DIM_MEMBER_INFO_TIER")

    cur.execute("""CREATE OR REPLACE TABLE DIM_MM_UDF ( 	_ENR_UDF_03_KEY bigint, 
	_ENR_UDF_03_ varchar (100), 
	_ENR_UDF_04_KEY bigint, 
	_ENR_UDF_04_ varchar (100), 
	_ENR_UDF_14_KEY bigint, 
	_ENR_UDF_14_ varchar (100), 
	_ENR_UDF_34_KEY bigint, 
	_ENR_UDF_34_ varchar (100), 
	_ENR_UDF_66_KEY bigint, 
	_ENR_UDF_66_ varchar (200), 
	_ENR_UDF_67_KEY bigint, 
	_ENR_UDF_67_ varchar (200), 
	_ENR_UDF_88_KEY bigint, 
	_ENR_UDF_88_ varchar (200), 
	_ENR_UDF_89_KEY bigint, 
	_ENR_UDF_89_ varchar (100), 
	_ENR_UDF_91_KEY bigint, 
	_ENR_UDF_91_ varchar (100), 
	_ENR_UDF_92_KEY bigint, 
	_ENR_UDF_92_ varchar (20), 
	_ENR_UDF_93_KEY bigint, 
	_ENR_UDF_93_ varchar (200) ); """)
    print("==> created Table: DIM_MM_UDF")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PAYER ( 	PAYER_KEY bigint, 
	PAYER_TYPE_KEY int, 
	PAYER_TYPE varchar (10), 
	PAYER_TYPE_DESC varchar (100), 
	PAYER_TYPE_LABEL varchar (113), 
	PAYER_LOB_KEY int, 
	PAYER_LOB varchar (11));  """)
    print("==> created Table: DIM_PAYER")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PBP ( 	PBP_LINE_KEY smallint, 
	CODE_SET_YEAR smallint, 
	PBP_LINE varchar (30), 
	PBP_LINE_KEY1 bigint, 
	PBP_LINE_DESC varchar (100), 
	PBP_LINE_DESC_KEY bigint, 
	PBP_LINE_CODE_AND_DESC varchar (107), 
	PBP_LINE_CODE_AND_DESC_KEY bigint, 
	Medicare_Covered decimal (5), 
	MA_LINE varchar (7), 
	MA_LINE_DET varchar (7) );   """)
    print("==> created Table: DIM_PBP")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROCEDURE_ICD ( 	ICD_PROC_KEY int, 
	ICD_PROC_SORT_KEY bigint, 
	ICD_PROC_TYPE_KEY int, 
	ICD_PROC_TYPE varchar (7), 
	ICD_PROC varchar (10), 
	ICD_PROC_DESC varchar (100), 
	ICD_PROC_CODE_AND_DESC varchar (113));  """)
    print("==> created Table: DIM_PROCEDURE_ICD")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_BILLING ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200));   """)
    print("==> created Table: DIM_PROVIDER_BILLING")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_CAP ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200));  """)
    print("==> created Table: DIM_PROVIDER_CAP")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_ETG_ATTRIB ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200));  """)
    print("==> created Table: DIM_PROVIDER_ETG_ATTRIB")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_PCP ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200)); """)
    print("==> created Table: DIM_PROVIDER_PCP")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_PCP_ATTRIB ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200));  """)
    print("==> created Table: DIM_PROVIDER_PCP_ATTRIB")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_REFERRING ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200));  """)
    print("==> created Table: DIM_PROVIDER_REFERRING")

    cur.execute("""CREATE OR REPLACE TABLE DIM_PROVIDER_SERVICE ( 	PROV_ID_KEY bigint, 
	PROV_NAME_KEY bigint, 
	PROV_TYPE_KEY bigint, 
	PROV_TAX_PROVIDER_TYPE_KEY bigint, 
	PROV_LABEL_KEY bigint, 
	PROV_GROUP_ID_KEY bigint, 
	PROV_GROUP_NAME_KEY bigint, 
	PROV_GROUP_LABEL_KEY bigint, 
	PROV_CLINIC_ID_KEY bigint, 
	PROV_CLINIC_NAME_KEY bigint, 
	PROV_CLINIC_LABEL_KEY bigint, 
	PROV_CLINIC_STATE_KEY bigint, 
	PROV_CLINIC_MSA_KEY bigint, 
	PROV_CLINIC_CITY_KEY bigint, 
	PROV_TAXONOMY_KEY bigint, 
	PROV_NPI_KEY bigint, 
	PROV_TIN_KEY bigint, 
	PROV_KEY int, 
	PROV_ID varchar (100), 
	PROV_LNAME varchar (100), 
	PROV_FNAME varchar (50), 
	PROV_MNAME varchar (1), 
	PROV_NAME varchar (154), 
	PROV_LABEL varchar (257), 
	PROV_TYPE varchar (8000), 
	PROV_PAR char (1), 
	PROV_SPEC_CODE varchar (80), 
	PROV_SPEC_DESC varchar (8000), 
	PROV_SPEC_LBL varchar (8000), 
	PROV_TIN char (9), 
	PROV_NPI varchar (10), 
	PROV_TAXONOMY varchar (10), 
	PROV_CLINIC_KEY int, 
	PROV_GRP_KEY int, 
	PROV_CLINIC_ID varchar (100), 
	PROV_CLINIC_NAME varchar (100), 
	PROV_CLINIC_LABEL varchar (203), 
	PROV_CLINIC_SOURCE_CITY varchar (40), 
	PROV_CLINIC_SOURCE_STATE char (2), 
	PROV_CLINIC_SOURCE_ZIP char (5), 
	PROV_GROUP_KEY int, 
	PROV_GROUP_ID varchar (100), 
	PROV_GROUP_NAME varchar (100), 
	PROV_GROUP_LABEL varchar (203), 
	PROV_CLINIC_MSA_NAME varchar (60), 
	PROV_CLINIC_GEO_KEY int, 
	PROV_CLINIC_ZIP5 varchar (10), 
	PROV_CLINIC_ZIP3 varchar (7), 
	PROV_CLINIC_STATE varchar (55), 
	PROV_CLINIC_CITY varchar (50), 
	PROV_CLINIC_COUNTY varchar (50), 
	PROV_TAX_PROVIDER_TYPE varchar (117), 
	PROV_TAX_MI_PROV_SPEC varchar (100), 
	PROV_TAX_MI_EBM_PROV_SPEC varchar (7), 
	PROV_TAX_MI_PCP_SPEC varchar (7), 
	PROV_UDF_KEY int, 
	_PROV_UDF_05_ varchar (200), 
	_PROV_UDF_06_ varchar (200), 
	_PROV_UDF_28_ varchar (200), 
	_PROV_UDF_37_ varchar (200), 
	_PROV_UDF_40_ varchar (200), 
	_PROV_UDF_01_KEY bigint, 
	_PROV_UDF_01_ varchar (200), 
	_PROV_UDF_02_KEY bigint, 
	_PROV_UDF_02_ varchar (200), 
	_PROV_UDF_03_KEY bigint, 
	_PROV_UDF_03_ varchar (200), 
	_PROV_UDF_04_KEY bigint, 
	_PROV_UDF_04_ varchar (200), 
	_PROV_UDF_07_KEY bigint, 
	_PROV_UDF_07_ varchar (200), 
	_PROV_UDF_08_KEY bigint, 
	_PROV_UDF_08_ varchar (200), 
	_PROV_UDF_09_KEY bigint, 
	_PROV_UDF_09_ varchar (200), 
	_PROV_UDF_10_KEY bigint, 
	_PROV_UDF_10_ varchar (200), 
	_PROV_UDF_11_KEY bigint, 
	_PROV_UDF_11_ varchar (200), 
	_PROV_UDF_12_KEY bigint, 
	_PROV_UDF_12_ varchar (200), 
	_PROV_UDF_13_KEY bigint, 
	_PROV_UDF_13_ varchar (200), 
	_PROV_UDF_14_KEY bigint, 
	_PROV_UDF_14_ varchar (200), 
	_PROV_UDF_15_KEY bigint, 
	_PROV_UDF_15_ varchar (200), 
	_PROV_UDF_16_KEY bigint, 
	_PROV_UDF_16_ varchar (200), 
	_PROV_UDF_17_KEY bigint, 
	_PROV_UDF_17_ varchar (200), 
	_PROV_UDF_18_KEY bigint, 
	_PROV_UDF_18_ varchar (200), 
	_PROV_UDF_19_KEY bigint, 
	_PROV_UDF_19_ varchar (200), 
	_PROV_UDF_20_KEY bigint, 
	_PROV_UDF_20_ varchar (200), 
	_PROV_UDF_21_KEY bigint, 
	_PROV_UDF_21_ varchar (200), 
	_PROV_UDF_22_KEY bigint, 
	_PROV_UDF_22_ varchar (200), 
	_PROV_UDF_23_KEY bigint, 
	_PROV_UDF_23_ varchar (200), 
	_PROV_UDF_24_KEY bigint, 
	_PROV_UDF_24_ varchar (200), 
	_PROV_UDF_25_KEY bigint, 
	_PROV_UDF_25_ varchar (200), 
	_PROV_UDF_26_KEY bigint, 
	_PROV_UDF_26_ varchar (200), 
	_PROV_UDF_27_KEY bigint, 
	_PROV_UDF_27_ varchar (200), 
	_PROV_UDF_29_KEY bigint, 
	_PROV_UDF_29_ varchar (200), 
	_PROV_UDF_30_KEY bigint, 
	_PROV_UDF_30_ varchar (200), 
	_PROV_UDF_31_KEY bigint, 
	_PROV_UDF_31_ varchar (200), 
	_PROV_UDF_32_KEY bigint, 
	_PROV_UDF_32_ varchar (200), 
	_PROV_UDF_33_KEY bigint, 
	_PROV_UDF_33_ varchar (200), 
	_PROV_UDF_34_KEY bigint, 
	_PROV_UDF_34_ varchar (200), 
	_PROV_UDF_35_KEY bigint, 
	_PROV_UDF_35_ varchar (200), 
	_PROV_UDF_36_KEY bigint, 
	_PROV_UDF_36_ varchar (200), 
	_PROV_UDF_38_KEY bigint, 
	_PROV_UDF_38_ varchar (200), 
	_PROV_UDF_39_KEY bigint, 
	_PROV_UDF_39_ varchar (200));  """)
    print("==> created Table: DIM_PROVIDER_SERVICE")

    cur.execute("""CREATE OR REPLACE TABLE DIM_REV_CODE ( 	REV_CODE_KEY smallint, 
	REV_CODE varchar (8000), 
	REV_DESC varchar (8000), 
	REV_LBL varchar (8000), 
	REV_GROUP varchar (8000)); """)
    print("==> created Table: DIM_REV_CODE")
     
    cur.execute("""CREATE OR REPLACE TABLE DIM_RVU_FINAL_STEP ( 	RVU_Final_Step int, 
	Description varchar (49), 
	RVU_METHOD varchar (11)); """)
    print("==> created Table: DIM_RVU_FINAL_STEP")

    cur.execute("""CREATE OR REPLACE TABLE DIM_RX ( 	RX_NDC_KEY int, 
	RX_NDC_CODE varchar (11), 
	RX_NDC_PROD_KEY bigint, 
	RX_NDC_PROD_NAME varchar (50), 
	RX_NDC_MANUFACTURER_KEY bigint, 
	RX_NDC_MANUFACTURER_NAME varchar (30), 
	RX_NDC_LBL varchar (64), 
	DEA_SCH varchar (6), 
	OTC varchar (6), 
	STRENGTH varchar (25), 
	UNIT varchar (7), 
	DOSAGE_FORM varchar (7), 
	GPI varchar (14), 
	BRAND_STATUS varchar (7), 
	RX_THER_CLASS_KEY int, 
	TC_MAIN_KEY bigint, 
	TC_MAIN_NAME varchar (100), 
	TC_SUBCAT1_KEY bigint, 
	TC_SUBCAT1_NAME varchar (100), 
	TC_SUBCAT2_KEY bigint, 
	TC_SUBCAT2_NAME varchar (100), 
	TC_THER_CLASS_CODE_KEY bigint, 
	TC_THER_CLASS_CODE varchar (10), 
	GPIGENERICNAME_KEY bigint, 
	GPIGENERICNAME varchar (60), 
	SUB1_RX_NDC_KEY int, 
	SUB1_RX_NDC_CODE varchar (15), 
	SUB1_RX_NDC_PROD_KEY bigint, 
	SUB1_RX_NDC_PROD_NAME varchar (50), 
	SUB1_RX_NDC_LBL varchar (64), 
	SUB1_BRAND_STATUS varchar (15), 
	SUB1_MANUFACTURER_KEY bigint, 
	SUB1_MANUFACTURER_NAME varchar (30), 
	SUB1_VALID_FLAG int, 
	SUB1_VALID_FLAG_NAME varchar (18), 
	SUB1_TYPE_KEY bigint, 
	SUB1_TYPE_Name varchar (30), 
	SUB2_RX_NDC_KEY int, 
	SUB2_RX_NDC_CODE varchar (15), 
	SUB2_RX_NDC_PROD_KEY bigint, 
	SUB2_RX_NDC_PROD_NAME varchar (50), 
	SUB2_RX_NDC_LBL varchar (64), 
	SUB2_BRAND_STATUS varchar (15), 
	SUB2_MANUFACTURER_KEY bigint, 
	SUB2_MANUFACTURER_NAME varchar (30), 
	SUB2_VALID_FLAG int, 
	SUB2_VALID_FLAG_NAME varchar (18), 
	SUB2_TYPE_KEY bigint, 
	SUB2_TYPE_Name varchar (30)); """)
    print("==> created Table: DIM_RX")

    cur.execute("""CREATE OR REPLACE TABLE DIM_SCDGC ( 	SCDGC int, 
	SCDGC_Description varchar (100), 
	SCDGC_CODE_AND_DESC varchar (108));  """)
    print("==> created Table: DIM_SCDGC")

    cur.execute("""CREATE OR REPLACE TABLE DIM_UB_BILL_TYPE ( 	UB_BILL_TYPE_KEY smallint, 
	UB_BILL_TYPE_FACILITY_TYPE varchar (100), 
	UB_BILL_TYPE_CLASS varchar (100), 
	UB_BILL_TYPE_DESC varchar (200), 
	UB_BILL_TYPE_ID varchar (10), 
	UB_BILL_LABEL varchar (213)); """)
    print("==> created Table: DIM_UB_BILL_TYPE")
    
    cur.execute("""CREATE OR REPLACE TABLE DIM_WASTE_LINE_NEW ( 	WASTE_LINE_TYPE_ID varchar (1), 
	WASTE_LINE_TYPE_DESCRIPTION varchar (39), 
	WASTE_LINE_TYPE_KEY int);  """)
    print("==> created Table: DIM_WASTE_LINE_NEW")
 
    cur.execute("""CREATE OR REPLACE TABLE DIM_WASTE_NEW ( 	WASTE_CAT_KEY int, 
	WASTE_DEGREE_OF_CERTAINTY_NEW varchar (1), 
	WASTE_SUFFICIENT_HISTORY_FLAG_NEW int, 
	WASTE_MNEMONIC_KEY bigint, 
	WASTE_MNEMONIC varchar (50), 
	WASTE_CATEGORY_KEY bigint, 
	WASTE_CATEGORY varchar (60), 
	WASTE_LABEL_KEY bigint, 
	WASTE_LABEL varchar (113), 
	WASTE_DESCRIPTION_KEY bigint, 
	WASTE_DESCRIPTION varchar (250), 
	WASTE_IP_SOURCE_KEY bigint, 
	WASTE_IP_SOURCE varchar (50), 
	WASTE_POPULATION_AGE_KEY bigint, 
	WASTE_POPULATION_AGE varchar (50), 
	WASTE_POPULATION_GENDER_KEY bigint, 
	WASTE_POPULATION_GENDER varchar (50), 
	WASTE_SPECIALIST_DESCRIPTION_KEY bigint, 
	WASTE_SPECIALIST_DESCRIPTION varchar (50), 
	WASTE_ROOT_CAUSE_KEY bigint, 
	WASTE_ROOT_CAUSE varchar (50), 
	WASTE_TOPICAL_THEME_KEY bigint, 
	WASTE_TOPICAL_THEME varchar (50), 
	WASTE_CERTAINITY_KEY int, 
	WASTE_CERTAINITY_DESCRIPTION varchar (15), 
	WASTE_SUFFICIENT_HISTORY_KEY int, 
	WASTE_SUFFICIENT_HISTORY_DESCRIPTION varchar (20), 
	WASTE_RISK_OF_PATIENT_HARM_KEY int, 
	WASTE_RISK_OF_PATIENT_HARM_DESCRIPTION varchar (12));  """)
    print("==> created Table: DIM_WASTE_NEW")

    cur.execute("""CREATE OR REPLACE TABLE FACT_CAPITATION ( 	CAP_KEY int, 
	MI_POST_DATE date, 
	EXPR_DATE date, 
	MEMBER_KEY int, 
	CAP_ID varchar (100), 
	CAP_TYPE varchar (25), 
	CAP_DATE date, 
	PROV_ID varchar (100), 
	WITHHOLD_AMT numeric (9), 
	CAP_AMT numeric (9), 
	CAP_DATA_SRC varchar (20), 
	CCHG_CAT_KEY int, 
	EXPR_DATE_INT int, 
	CAP_DATE_INT int, 
	ERG_PROSPECTIVE_RISK_CATEGORY int, 
	ERG_RETROSPECTIVE_RISK_CATEGORY int, 
	ROWCONTROL_KEY int, 
	PCP_PROV_KEY int, 
	PCP_ATTRIB_PROV_KEY int, 
	MARA_PROSP_PRIM_CONDITION_KEY int, 
	MARA_CONC_PRIM_CONDITION_KEY int, 
	_ENR_UDF_03_ varchar (100), 
	_ENR_UDF_04_ varchar (100), 
	_ENR_UDF_14_ varchar (100), 
	_ENR_UDF_34_ varchar (100), 
	_ENR_UDF_66_ varchar (200), 
	_ENR_UDF_67_ varchar (200), 
	_ENR_UDF_88_ varchar (200), 
	_ENR_UDF_89_ varchar (100), 
	_ENR_UDF_91_ varchar (100), 
	_ENR_UDF_92_ varchar (20), 
	_ENR_UDF_93_ varchar (200), 
	_CAP_UDF_01_ varchar (100), 
	_CAP_UDF_02_ varchar (100), 
	_CAP_UDF_04_ varchar (50), 
	_CAP_UDF_05_ varchar (50), 
	_CAP_UDF_23_ varchar (50), 
	_CAP_UDF_25_ varchar (50), 
	_CAP_UDF_26_ varchar (50), 
	_CAP_UDF_27_ varchar (50), 
	_CAP_UDF_29_ varchar (50), 
	_CAP_UDF_34_ varchar (50), 
	_CAP_UDF_40_ varchar (50), 
	_CAP_UDF_18_ numeric (17), 
	_ENR_UDF_10_ varchar (100), 
	_ENR_UDF_12_ varchar (100), 
	_ENR_UDF_13_ varchar (100), 
	_ENR_UDF_17_ varchar (100), 
	_ENR_UDF_18_ varchar (100), 
	_ENR_UDF_19_ varchar (100), 
	_ENR_UDF_20_ varchar (100), 
	_ENR_UDF_21_ varchar (100), 
	_ENR_UDF_22_ varchar (100), 
	_ENR_UDF_28_ varchar (100), 
	_ENR_UDF_35_ varchar (100), 
	_ENR_UDF_38_ varchar (100), 
	_ENR_UDF_41_ varchar (100), 
	_ENR_UDF_42_ varchar (100), 
	_ENR_UDF_43_ varchar (100), 
	_ENR_UDF_44_ varchar (100), 
	_ENR_UDF_45_ varchar (100), 
	_ENR_UDF_46_ varchar (100), 
	_ENR_UDF_47_ varchar (100), 
	_ENR_UDF_51_ varchar (100), 
	_ENR_UDF_53_ varchar (100), 
	_ENR_UDF_54_ varchar (100), 
	_ENR_UDF_56_ varchar (100), 
	_ENR_UDF_57_ varchar (100), 
	_ENR_UDF_64_ varchar (200), 
	_ENR_UDF_69_ varchar (200), 
	_ENR_UDF_70_ varchar (200), 
	_ENR_UDF_72_ varchar (200), 
	_ENR_UDF_73_ varchar (200), 
	_ENR_UDF_75_ varchar (200), 
	_ENR_UDF_76_ varchar (200), 
	_ENR_UDF_77_ varchar (200), 
	_ENR_UDF_78_ varchar (200), 
	_ENR_UDF_79_ varchar (200), 
	_ENR_UDF_82_ varchar (200), 
	_ENR_UDF_90_ varchar (100), 
	MI_USER_DIM_KEY_01 int, 
	MI_USER_DIM_KEY_02 int, 
	MI_USER_DIM_KEY_03 int, 
	MI_USER_DIM_KEY_04 int, 
	MI_USER_DIM_KEY_05 int, 
	MI_USER_DIM_KEY_06 int, 
	MI_USER_DIM_KEY_07 int, 
	MI_USER_DIM_KEY_08 int, 
	MI_USER_DIM_KEY_09 int, 
	MI_USER_DIM_KEY_10 int, 
	TIER_KEY smallint, 
	MEM_STAT_KEY tinyint, 
	RELATION_KEY tinyint, 
	MEM_ZIP char (7), 
	UD00_Key int, 
	PAYER_TYPE_KEY tinyint, 
	PAYER_LOB_KEY tinyint, 
	CAP_DETAIL_KEY varchar (25));  """)
    print("==> created Table: FACT_CAPITATION")

    cur.execute("""CREATE OR REPLACE TABLE FACT_EBM ( 	MEMBER_KEY int, 
	EBM_Key bigint, 
	PCP_PROV_KEY int, 
	EBM_DATE date, 
	EBM_DATE_INT int, 
	CCHG_CAT_KEY int, 
	NUMERATOR numeric (9), 
	DENOMINATOR numeric (9), 
	PCP_ATTRIB_PROV_KEY int, 
	ROWCONTROL_KEY int, 
	MARA_PROSP_PRIM_CONDITION_KEY int, 
	MARA_CONC_PRIM_CONDITION_KEY int, 
	_ENR_UDF_03_ varchar (100), 
	_ENR_UDF_04_ varchar (100), 
	_ENR_UDF_14_ varchar (100), 
	_ENR_UDF_34_ varchar (100), 
	_ENR_UDF_66_ varchar (200), 
	_ENR_UDF_67_ varchar (200), 
	_ENR_UDF_88_ varchar (200), 
	_ENR_UDF_89_ varchar (100), 
	_ENR_UDF_91_ varchar (100), 
	_ENR_UDF_92_ varchar (20), 
	_ENR_UDF_93_ varchar (200), 
	_ENR_UDF_10_ varchar (100), 
	_ENR_UDF_12_ varchar (100), 
	_ENR_UDF_13_ varchar (100), 
	_ENR_UDF_17_ varchar (100), 
	_ENR_UDF_18_ varchar (100), 
	_ENR_UDF_19_ varchar (100), 
	_ENR_UDF_20_ varchar (100), 
	_ENR_UDF_21_ varchar (100), 
	_ENR_UDF_22_ varchar (100), 
	_ENR_UDF_28_ varchar (100), 
	_ENR_UDF_35_ varchar (100), 
	_ENR_UDF_38_ varchar (100), 
	_ENR_UDF_41_ varchar (100), 
	_ENR_UDF_42_ varchar (100), 
	_ENR_UDF_43_ varchar (100), 
	_ENR_UDF_44_ varchar (100), 
	_ENR_UDF_45_ varchar (100), 
	_ENR_UDF_46_ varchar (100), 
	_ENR_UDF_47_ varchar (100), 
	_ENR_UDF_51_ varchar (100), 
	_ENR_UDF_53_ varchar (100), 
	_ENR_UDF_54_ varchar (100), 
	_ENR_UDF_56_ varchar (100), 
	_ENR_UDF_57_ varchar (100), 
	_ENR_UDF_64_ varchar (200), 
	_ENR_UDF_69_ varchar (200), 
	_ENR_UDF_70_ varchar (200), 
	_ENR_UDF_72_ varchar (200), 
	_ENR_UDF_73_ varchar (200), 
	_ENR_UDF_75_ varchar (200), 
	_ENR_UDF_76_ varchar (200), 
	_ENR_UDF_77_ varchar (200), 
	_ENR_UDF_78_ varchar (200), 
	_ENR_UDF_79_ varchar (200), 
	_ENR_UDF_82_ varchar (200), 
	_ENR_UDF_90_ varchar (100), 
	MI_USER_DIM_KEY_01 int, 
	MI_USER_DIM_KEY_02 int, 
	MI_USER_DIM_KEY_03 int, 
	MI_USER_DIM_KEY_04 int, 
	MI_USER_DIM_KEY_05 int, 
	MI_USER_DIM_KEY_06 int, 
	MI_USER_DIM_KEY_07 int, 
	MI_USER_DIM_KEY_08 int, 
	MI_USER_DIM_KEY_09 int, 
	MI_USER_DIM_KEY_10 int, 
	TIER_KEY smallint, 
	MEM_STAT_KEY tinyint, 
	RELATION_KEY tinyint, 
	MEM_ZIP char (7), 
	UD00_Key int, 
	PAYER_TYPE_KEY int, 
	PAYER_LOB_KEY int, 
	AGE tinyint, 
	GENDER char (1)); """)
    print("==> created Table: FACT_EBM")

    cur.execute("""CREATE OR REPLACE TABLE FACT_MEMBER_MONTHS ( 	MEMBER_MONTH_START_DATE_INT int, 
	MEMBER_MONTH_START_DATE date, 
	PCP_PROV_KEY int, 
	MEMBER_KEY int, 
	QTY_MM_MD float (8), 
	QTY_MM_RX float (8), 
	QTY_MM_DN float (8), 
	QTY_MM_VS float (8), 
	PREMIUM_EMPLOYER_PAID numeric (9), 
	PREMIUM_EMPLOYEE_PAID numeric (9), 
	QTY_EM_MD float (8), 
	QTY_EM_RX float (8), 
	QTY_EM_DN float (8), 
	QTY_EM_VS float (8), 
	CCHG_CAT_KEY int, 
	CCHG_CATEGORIES_COUNT int, 
	CCHG_FLAGS_KEY bigint, 
	Comorbidity_Key int, 
	PCP_ATTRIB_PROV_KEY int, 
	ROWCONTROL_KEY int, 
	MARA_AS_TOTAL_RISK numeric (9), 
	MARA_CONC_RX_RISK numeric (9), 
	MARA_CONC_IP_RISK numeric (9), 
	MARA_CONC_OP_RISK numeric (9), 
	MARA_CONC_PHYSICIAN_RISK numeric (9), 
	MARA_CONC_ER_RISK numeric (9), 
	MARA_CONC_OTH_RISK numeric (9), 
	MARA_PROSP_RX_RISK numeric (9), 
	MARA_PROSP_IP_RISK numeric (9), 
	MARA_PROSP_OP_RISK numeric (9), 
	MARA_PROSP_PHYSICIAN_RISK numeric (9), 
	MARA_PROSP_ER_RISK numeric (9), 
	MARA_PROSP_OTH_RISK numeric (9), 
	MARA_PROSP_CONDITION_KEY int, 
	MARA_CONC_CONDITION_KEY int, 
	HCC_COMMUNITY_RISK decimal (5), 
	HCC_INSTITUTIONAL_RISK decimal (5), 
	HCC_NEW_ENROLLEE_RISK decimal (5), 
	HCC_SNP_NEW_ENROLLEE_RISK decimal (5), 
	ERG_PROSPECTIVE_RISK numeric (9), 
	ERG_RETROSPECTIVE_RISK numeric (9), 
	ERG_DEMOGRAPHIC_RISK numeric (9), 
	ERG_ACTUARIAL_PROSPECTIVE_RISK numeric (9), 
	ADMIN_TOTAL_COST numeric (9), 
	MED_HOME_ID_KEY smallint, 
	HCC_RISK decimal (5), 
	HCC_MODEL_KEY tinyint, 
	_ENR_UDF_03_ varchar (100), 
	_ENR_UDF_04_ varchar (100), 
	_ENR_UDF_14_ varchar (100), 
	_ENR_UDF_34_ varchar (100), 
	_ENR_UDF_66_ varchar (200), 
	_ENR_UDF_67_ varchar (200), 
	_ENR_UDF_88_ varchar (200), 
	_ENR_UDF_89_ varchar (100), 
	_ENR_UDF_91_ varchar (100), 
	_ENR_UDF_92_ varchar (20), 
	_ENR_UDF_93_ varchar (200), 
	_ENR_UDF_10_ varchar (100), 
	_ENR_UDF_12_ varchar (100), 
	_ENR_UDF_13_ varchar (100), 
	_ENR_UDF_17_ varchar (100), 
	_ENR_UDF_18_ varchar (100), 
	_ENR_UDF_19_ varchar (100), 
	_ENR_UDF_20_ varchar (100), 
	_ENR_UDF_21_ varchar (100), 
	_ENR_UDF_22_ varchar (100), 
	_ENR_UDF_28_ varchar (100), 
	_ENR_UDF_35_ varchar (100), 
	_ENR_UDF_38_ varchar (100), 
	_ENR_UDF_41_ varchar (100), 
	_ENR_UDF_42_ varchar (100), 
	_ENR_UDF_43_ varchar (100), 
	_ENR_UDF_44_ varchar (100), 
	_ENR_UDF_45_ varchar (100), 
	_ENR_UDF_46_ varchar (100), 
	_ENR_UDF_47_ varchar (100), 
	_ENR_UDF_51_ varchar (100), 
	_ENR_UDF_53_ varchar (100), 
	_ENR_UDF_54_ varchar (100), 
	_ENR_UDF_56_ varchar (100), 
	_ENR_UDF_57_ varchar (100), 
	_ENR_UDF_64_ varchar (200), 
	_ENR_UDF_69_ varchar (200), 
	_ENR_UDF_70_ varchar (200), 
	_ENR_UDF_72_ varchar (200), 
	_ENR_UDF_73_ varchar (200), 
	_ENR_UDF_75_ varchar (200), 
	_ENR_UDF_76_ varchar (200), 
	_ENR_UDF_77_ varchar (200), 
	_ENR_UDF_78_ varchar (200), 
	_ENR_UDF_79_ varchar (200), 
	_ENR_UDF_82_ varchar (200), 
	_ENR_UDF_90_ varchar (100), 
	MI_USER_DIM_KEY_01 int, 
	MI_USER_DIM_KEY_02 int, 
	MI_USER_DIM_KEY_03 int, 
	MI_USER_DIM_KEY_04 int, 
	MI_USER_DIM_KEY_05 int, 
	MI_USER_DIM_KEY_06 int, 
	MI_USER_DIM_KEY_07 int, 
	MI_USER_DIM_KEY_08 int, 
	MI_USER_DIM_KEY_09 int, 
	MI_USER_DIM_KEY_10 int, 
	AGE tinyint, 
	GENDER char (1), 
	RELATION_KEY tinyint, 
	TIER_KEY smallint, 
	MEM_STAT_KEY tinyint, 
	MEM_ZIP char (7), 
	UD00_Key int, 
	PAYER_TYPE_KEY tinyint, 
	PAYER_LOB_KEY tinyint, 
	SUBSCRIBER_KEY int); """)
    print("==> created Table: FACT_MEMBER_MONTHS")

    cur.execute("""CREATE OR REPLACE TABLE FACT_SERVICES ( 	FROM_DATE_INT int, 
	PAID_DATE_INT int, 
	SERVICE_MONTH_START_DATE date, 
	MR_LINE_CASE_KEY smallint, 
	UD00_KEY bigint, 
	ICD_DIAG_01_ORIGINAL_KEY int, 
	ICD_PROC_01_ORIGINAL_KEY int, 
	ADM_SRC_ORIGINAL_KEY int, 
	ADM_TYPE_ORIGINAL_KEY int, 
	UBBILL_TYPE_ORIGINAL_KEY int, 
	ADM_DATE_INT_ORIGINAL int, 
	DIS_DATE_INT_ORIGINAL int, 
	REV_CODE_KEY int, 
	RX_NDC_KEY int, 
	BILL_PROV_KEY int, 
	ATT_PROV_KEY int, 
	REF_PROV_KEY int, 
	PCP_PROV_KEY int, 
	MEMBER_KEY int, 
	QTY_ADMIT_CASE numeric, 
	QTY_ADMIT numeric, 
	QTY_CASE numeric, 
	QTY_DAY_PROC numeric, 
	QTY_DAY numeric, 
	QTY_PROC numeric, 
	QTY_SVC_UNITS numeric (9), 
	AMT_PAID numeric (9), 
	AMT_BILLED numeric (9), 
	AMT_ALLOWED numeric (9), 
	AMT_COB numeric (9), 
	AMT_COPAY numeric (9), 
	AMT_DEDUCT numeric (9), 
	AMT_COINS numeric (9), 
	AMT_MEMBER numeric (13), 
	AMT_OTHER numeric (13), 
	AMT_ALLOWED_STAT numeric (9), 
	AMT_WITHHOLD numeric (9), 
	AMT_BILLED_DISC numeric (9), 
	AMT_ALLOWED_DISC numeric (9), 
	AMT_DISALLOWED numeric (9), 
	QTY_RX_DAYS_SUPPLY float (8), 
	RATE_RX_DRUG_COST float (8), 
	RATE_RX_INGR_COST float (8), 
	AMT_RX_DISP_FEE numeric, 
	AMT_RX_DISCOUNT numeric, 
	AMT_ALLOWED_RX_DISC_1 numeric (17), 
	AMT_ALLOWED_RX_DISC_2 numeric (17), 
	AMT_PAID_RX_DISC_1 numeric (17), 
	AMT_PAID_RX_DISC_2 numeric (17), 
	ETG_EPISODE_COUNT_ALLOWED_PRORATE numeric (9), 
	ROWSECURITY_KEY int, 
	CCHG_CAT_KEY int, 
	PROC_CODE_KEY int, 
	PCP_ATTRIB_PROV_KEY int, 
	ETG_ATTRIB_PROV_KEY int, 
	QTY_ADMIT_CASE_IBNR_COMPLETE float (8), 
	QTY_ADMIT_IBNR_COMPLETE float (8), 
	QTY_CASE_IBNR_COMPLETE float (8), 
	QTY_DAY_PROC_IBNR_COMPLETE float (8), 
	QTY_DAY_IBNR_COMPLETE float (8), 
	QTY_PROC_IBNR_COMPLETE float (8), 
	AMT_PAID_IBNR_COMPLETE float (8), 
	AMT_BILLED_IBNR_COMPLETE float (8), 
	AMT_ALLOWED_IBNR_COMPLETE float (8), 
	AMT_COB_IBNR_COMPLETE float (8), 
	AMT_COPAY_IBNR_COMPLETE float (8), 
	AMT_DEDUCT_IBNR_COMPLETE float (8), 
	AMT_COINS_IBNR_COMPLETE float (8), 
	AMT_MEMBER_IBNR_COMPLETE float (8), 
	AMT_OTHER_IBNR_COMPLETE float (8), 
	AMT_ALLOWED_STAT_COMPLETE numeric (17), 
	PCP_PROV_KEY_ETG_BASIS int, 
	PCP_ATTRIB_KEY_ETG_BASIS int, 
	etg_max_incurred_date int, 
	CCHG_CAT_KEY_ETG_BASIS int, 
	MARA_PROSP_PRIM_CONDITION_KEY int, 
	MARA_CONC_PRIM_CONDITION_KEY int, 
	RVU_MI_BILLED numeric (13), 
	RVU_MI_ALLOWED numeric (13), 
	RVU_MI_CURRENT_ALLOWED numeric (13), 
	RVU_FINAL numeric (13), 
	RVU_FINAL_IBNR_COMPLETE float (8), 
	RVU_FINAL_STEP char (2), 
	MEDICARE_INCLUDE_INDICATOR smallint, 
	GRVU_INCLUDE_INDICATOR smallint, 
	MEDICARE_ALLOWED_BASE numeric (13), 
	MEDICARE_ALLOWED_TOTAL numeric (13), 
	MEDICARE_ADVANTAGE_ALLOWED_TOTAL numeric (13), 
	MEG_EPISODE_COUNT_ALLOWED_PRORATE numeric (9), 
	MEG_HIGHSTAGE_KEY int, 
	MEG_STAGE_KEY int, 
	MEG_KEY int, 
	MEG_OUTLIER_KEY tinyint, 
	MEG_EPISODE_COMPLETE int, 
	MEG_EPISODE_PRIMARY_PROV_CW_KEY int, 
	MEG_EPISODE_MANAGING_PROV_CW_KEY int, 
	MEG_EPISODE_TOP_FACILITY_PROV_CW_KEY int, 
	CLAIM_AUDIT_KEY int, 
	PROC_MOD1_KEY int, 
	PROC_MOD2_KEY int, 
	PBP_LINE_KEY smallint, 
	PBP_ADMITS_CASES_RAW numeric (9), 
	UNIQUE_ADMIT_KEY bigint, 
	ADM_DATE_INT int, 
	DIS_DATE_INT int, 
	ADM_SRC_KEY int, 
	ADM_TYPE_KEY int, 
	ICD_DIAG_01_KEY int, 
	ICD_PROC_01_KEY int, 
	UBBILL_TYPE_KEY int, 
	MEDI_CAL_AVOID_ER int, 
	WASTE_CAT_KEY_NEW smallint, 
	WASTE_DEGREE_OF_CERTAINTY_NEW char (1), 
	WASTE_SUFFICIENT_HISTORY_FLAG_NEW tinyint, 
	WASTE_LINE_TYPE_NEW char (1), 
	AMT_ALLOWED_WASTE_CASE numeric (9), 
	AMT_ALLOWED_WASTE_LINE numeric (9), 
	AMT_PAID_WASTE_CASE numeric (9), 
	AMT_PAID_WASTE_LINE numeric (9), 
	AMT_VOID numeric (9), 
	CCHG_Categories_Count int, 
	CCHG_SCDGC_1 int, 
	CCHG_FLAGS_KEY bigint, 
	Comorbidity_Key int, 
	CCHG_Contact_days int, 
	_CLAIM_UDF_01_ varchar (100), 
	_CLAIM_UDF_02_ varchar (100), 
	_CLAIM_UDF_10_ varchar (7), 
	_CLAIM_UDF_11_ varchar (100), 
	_CLAIM_UDF_24_ varchar (200), 
	_CLAIM_UDF_25_ varchar (200), 
	_CLAIM_UDF_40_ varchar (200), 
	_CLAIM_UDF_41_ varchar (200), 
	_CLAIM_UDF_43_ varchar (200), 
	_CLAIM_UDF_45_ varchar (200), 
	_CLAIM_UDF_54_ varchar (200), 
	_CLAIM_UDF_55_ varchar (200), 
	_CLAIM_UDF_56_ varchar (200), 
	_CLAIM_UDF_73_ varchar (200), 
	_CLAIM_UDF_74_ varchar (200), 
	_CLAIM_UDF_75_ varchar (200), 
	_CLAIM_UDF_81_ varchar (100), 
	_CLAIM_UDF_89_ varchar (10), 
	_CLAIM_UDF_90_ varchar (100), 
	_CLAIM_UDF_92_ varchar (200), 
	_CLAIM_UDF_93_ varchar (50), 
	_CLAIM_UDF_94_ varchar (50), 
	_CLAIM_UDF_95_ varchar (50), 
	_ENR_UDF_03_ varchar (100), 
	_ENR_UDF_04_ varchar (100), 
	_ENR_UDF_14_ varchar (100), 
	_ENR_UDF_34_ varchar (100), 
	_ENR_UDF_66_ varchar (200), 
	_ENR_UDF_67_ varchar (200), 
	_ENR_UDF_88_ varchar (200), 
	_ENR_UDF_89_ varchar (100), 
	_ENR_UDF_91_ varchar (100), 
	_ENR_UDF_92_ varchar (20), 
	_ENR_UDF_93_ varchar (200), 
	_CLAIM_UDF_13_ varchar (200), 
	_CLAIM_UDF_14_ varchar (200), 
	_CLAIM_UDF_17_ varchar (200), 
	_CLAIM_UDF_22_ varchar (200), 
	_CLAIM_UDF_26_ varchar (200), 
	_CLAIM_UDF_27_ varchar (200), 
	_CLAIM_UDF_30_ varchar (200), 
	_CLAIM_UDF_31_ varchar (200), 
	_CLAIM_UDF_32_ varchar (200), 
	_CLAIM_UDF_39_ varchar (200), 
	_CLAIM_UDF_53_ varchar (200), 
	_CLAIM_UDF_59_ varchar (200), 
	_CLAIM_UDF_64_ varchar (200), 
	_CLAIM_UDF_65_ varchar (200), 
	_CLAIM_UDF_66_ varchar (200), 
	_CLAIM_UDF_72_ varchar (200), 
	_CLAIM_UDF_77_ varchar (200), 
	_CLAIM_UDF_78_ varchar (200), 
	_CLAIM_UDF_82_ varchar (100), 
	_CLAIM_UDF_83_ varchar (100), 
	_CLAIM_UDF_84_ varchar (100), 
	_CLAIM_UDF_91_ varchar (100), 
	_ENR_UDF_10_ varchar (100), 
	_ENR_UDF_12_ varchar (100), 
	_ENR_UDF_13_ varchar (100), 
	_ENR_UDF_17_ varchar (100), 
	_ENR_UDF_18_ varchar (100), 
	_ENR_UDF_19_ varchar (100), 
	_ENR_UDF_20_ varchar (100), 
	_ENR_UDF_21_ varchar (100), 
	_ENR_UDF_22_ varchar (100), 
	_ENR_UDF_28_ varchar (100), 
	_ENR_UDF_35_ varchar (100), 
	_ENR_UDF_38_ varchar (100), 
	_ENR_UDF_41_ varchar (100), 
	_ENR_UDF_42_ varchar (100), 
	_ENR_UDF_43_ varchar (100), 
	_ENR_UDF_44_ varchar (100), 
	_ENR_UDF_45_ varchar (100), 
	_ENR_UDF_46_ varchar (100), 
	_ENR_UDF_47_ varchar (100), 
	_ENR_UDF_51_ varchar (100), 
	_ENR_UDF_53_ varchar (100), 
	_ENR_UDF_54_ varchar (100), 
	_ENR_UDF_56_ varchar (100), 
	_ENR_UDF_57_ varchar (100), 
	_ENR_UDF_64_ varchar (200), 
	_ENR_UDF_69_ varchar (200), 
	_ENR_UDF_70_ varchar (200), 
	_ENR_UDF_72_ varchar (200), 
	_ENR_UDF_73_ varchar (200), 
	_ENR_UDF_75_ varchar (200), 
	_ENR_UDF_76_ varchar (200), 
	_ENR_UDF_77_ varchar (200), 
	_ENR_UDF_78_ varchar (200), 
	_ENR_UDF_79_ varchar (200), 
	_ENR_UDF_82_ varchar (200), 
	_ENR_UDF_90_ varchar (100), 
	CS_CLAIM_ID varchar (100), 
	FACILITY_CLAIM_ID varchar (100), 
	MI_USER_DIM_KEY_01 int, 
	MI_USER_DIM_KEY_02 int, 
	MI_USER_DIM_KEY_03 int, 
	MI_USER_DIM_KEY_04 int, 
	MI_USER_DIM_KEY_05 int, 
	MI_USER_DIM_KEY_06 int, 
	MI_USER_DIM_KEY_07 int, 
	MI_USER_DIM_KEY_08 int, 
	MI_USER_DIM_KEY_09 int, 
	MI_USER_DIM_KEY_10 int, 
	RELATION_KEY int, 
	TIER_KEY int, 
	GENDER char (1), 
	MEM_STAT_KEY int, 
	MEM_ZIP varchar (7), 
	AGE int, 
	PAYER_TYPE_KEY int, 
	PAYER_LOB_KEY int, 
	POS_LABEL varchar (100), 
	SV_STAT_NAME varchar (100), 
	SV_STAT char (1), 
	CLAIM_IN_NETWORK_NAME varchar (20), 
	DRG_KEY int, 
	CLAIM_ID varchar (100), 
	CLAIM_ID_KEY bigint, 
	ICD_PROC_02_KEY int, 
	ICD_DIAG_02_KEY int, 
	ICD_PROC_03_KEY int, 
	ICD_DIAG_03_KEY int, 
	ICD_PROC_04_KEY int, 
	ICD_DIAG_04_KEY int, 
	ICD_DIAG_05_KEY int, 
	ICD_DIAG_06_KEY int, 
	ICD_DIAG_07_KEY int, 
	ICD_DIAG_08_KEY int, 
	ICD_DIAG_09_KEY int, 
	ICD_DIAG_10_KEY int, 
	SERVICE_LINE int, 
	FORM_TYPE char (1), 
	RX_REFILLS smallint, 
	AGE_ON_DOS tinyint, 
	HCG_SETTING varchar (7), 
	HCG_MR_LINE varchar (4), 
	MI_UTILS numeric (9), 
	SV_STAT_DESC varchar (100), 
	MI_CASES numeric (9), 
	SERVICES_KEY bigint, 
	MEG_EPISODE_NUMBER int, 
	ETG_EPISODE_NUMBER bigint, 
	RX_FILL_SRC varchar (6), 
	RX_DAW char (1), 
	WASTE_COST_COUNT_LINE_FLAG_NEW char (1), 
	DIS_STAT_KEY int, 
	ETG_KEY int, 
	ETG_OUTLIER_STATUS int, 
	SUB1_VALID_FLAG char (1), 
	SUBSCRIBER_KEY int, 
	WASTE_SERVICE_ID bigint, 
	CCHG_SCDGC_2 int, 
	CCHG_SCDGC_3 int, 
	CCHG_SCDGC_4 int, 
	CCHG_SCDGC_5 int, 
	CCHG_SCDGC_6 int, 
	MI_USER_DIM_KEY_01_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_02_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_03_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_04_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_05_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_06_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_07_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_08_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_09_EPISODE_BASIS int, 
	MI_USER_DIM_KEY_10_EPISODE_BASIS int, 
	AGE_EPISODE_BASIS int, 
	GENDER_EPISODE_BASIS varchar (1), 
	RELATION_KEY_EPISODE_BASIS int, 
	TIER_KEY_EPISODE_BASIS int, 
	MEM_STAT_KEY_EPISODE_BASIS int, 
	MEM_ZIP_EPISODE_BASIS varchar (7), 
	PAYER_TYPE_KEY_EPISODE_BASIS int, 
	PAYER_LOB_KEY_EPISODE_BASIS int, 
	GRP_KEY int, 
	ED_ADMIT bigint, 
	ETG_SEVERITY int, 
	ETG_EPISODE_TYPE int); """)
    print("==> created Table: FACT_SERVICES")

    cur.execute("""CREATE OR REPLACE TABLE FACT_WASTE_EVENT ( 	WASTE_CAT_KEY smallint, 
	DEGREE_OF_CERTAINTY char (1), 
	SUFFICIENT_HISTORY_FLAG tinyint, 
	WASTE_SERVICE_ID bigint, 
	AMT_ALLOWED_WASTE_CASE decimal (9), 
	AMT_ALLOWED_WASTE_LINE decimal (9), 
	AMT_PAID_WASTE_CASE decimal (9), 
	AMT_PAID_WASTE_LINE decimal (9), 
	MEMBER_KEY int, 
	WASTE_EVENT_DATE_INT int, 
	CCHG_CAT_KEY int, 
	ERG_PROSPECTIVE_RISK_CATEGORY int, 
	ERG_RETROSPECTIVE_RISK_CATEGORY int, 
	ROWCONTROL_KEY int, 
	PCP_PROV_KEY int, 
	PCP_ATTRIB_PROV_KEY int, 
	MARA_PROSP_PRIM_CONDITION_KEY int, 
	MARA_CONC_PRIM_CONDITION_KEY int, 
	GRP_KEY int, 
	AGE tinyint, 
	GENDER char (1), 
	MEM_ZIP char (7), 
	MONTHS tinyint, 
	MEM_STAT_KEY tinyint, 
	PROD_TYPE_KEY tinyint, 
	TIER_KEY smallint, 
	RELATION_KEY tinyint, 
	QTY_WASTEFUL_EVENTS int, 
	QTY_NECESSARY_EVENTS int, 
	MI_USER_DIM_KEY_01 int, 
	MI_USER_DIM_KEY_02 int, 
	MI_USER_DIM_KEY_03 int, 
	MI_USER_DIM_KEY_04 int, 
	MI_USER_DIM_KEY_05 int, 
	MI_USER_DIM_KEY_06 int, 
	MI_USER_DIM_KEY_07 int, 
	MI_USER_DIM_KEY_08 int, 
	MI_USER_DIM_KEY_09 int, 
	MI_USER_DIM_KEY_10 int, 
	UD00_Key int, 
	PAYER_TYPE_KEY tinyint, 
	PAYER_LOB_KEY tinyint);  """)
    print("==> created Table: FACT_WASTE_EVENT")

    cur.execute("""CREATE OR REPLACE TABLE RPT_CONTINUOUS_STAY ( 	UNIQUE_ADMIT_KEY bigint, 
	UNIQUE_ADMIT_NAME varchar (50), 
	ED_ADMIT_FLAG varchar (22), 
	DRG_BENCH_VALID_FLAG_NAME int, 
	DRG_BENCH_VALID_FLAG_KEY int, 
	DRG_BENCH_VALID_FLAG varchar (22), 
	INPATIENT_ADMIT_FLAG varchar (22), 
	PSC_1_NAME varchar (100), 
	PSC_2_NAME varchar (100), 
	PSC_3_NAME varchar (100), 
	PSC_4_NAME varchar (100), 
	PSC_5_NAME varchar (100), 
	PSC_6_NAME varchar (100), 
	PSC_8_NAME varchar (100), 
	PSC_9_NAME varchar (100), 
	PSC_11_NAME varchar (100), 
	PSC_12_NAME varchar (100), 
	PSC_13_NAME varchar (100), 
	PSC_14_NAME varchar (100), 
	PSC_16_NAME varchar (100), 
	PSC_17_NAME varchar (100), 
	PSC_18_NAME varchar (100), 
	PSC_19_NAME varchar (100), 
	PQI_1_NAME varchar (100), 
	PQI_2_NAME varchar (100), 
	PQI_3_NAME varchar (100), 
	PQI_5_NAME varchar (100), 
	PQI_7_NAME varchar (100), 
	PQI_8_NAME varchar (100), 
	PQI_10_NAME varchar (100), 
	PQI_11_NAME varchar (100), 
	PQI_12_NAME varchar (100), 
	PQI_14_NAME varchar (100), 
	PQI_15_NAME varchar (100), 
	PQI_16_NAME varchar (100), 
	PCR7_NAME varchar (100), 
	PCR15_NAME varchar (100), 
	PCR30_NAME varchar (100), 
	AVD_VS_NAVD_NAME varchar (27), 
	PRIMARY_EVENT_NAME varchar (53), 
	ADMIT_CLASS_NAME varchar (36));  """)
    print("==> created Table: RPT_CONTINUOUS_STAY")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD01 ( 	UDD_Key int, 
	UD01_LBL varchar (203)); """)
    print("==> created Table: RPT_UD01")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD02 ( 	UDD_Key int, 
	UD02_LBL varchar (203)); """)
    print("==> created Table: RPT_UD02")

    cur.execute(""" CREATE OR REPLACE TABLE RPT_UD03 ( 	UDD_Key int, 
	UD03_LBL varchar (203));  """)
    print("==> created Table: RPT_UD03")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD04 ( 	UDD_Key int, 
	UD04_LBL varchar (203)); """)
    print("==> created Table: RPT_UD04")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD05 ( 	UDD_Key int, 
	UD05_LBL varchar (203)); """)
    print("==> created Table: RPT_UD05") 

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD06 ( 	UDD_Key int, 
	UD06_LBL varchar (203)); """)
    print("==> created Table: RPT_UD06") 

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD07 ( 	UDD_Key int, 
	UD07_LBL varchar (203)); """)
    print("==> created Table: RPT_UD07")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD08 ( 	UDD_Key int, 
	UD08_LBL varchar (203));  """)
    print("==> created Table: RPT_UD08")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD09 ( 	UDD_Key int, 
	UD09_LBL varchar (203)); """)
    print("==> created Table: RPT_UD09")

    cur.execute("""CREATE OR REPLACE TABLE RPT_UD10 ( 	UDD_Key int, 
	UD10_LBL varchar (203)); """)
    print("==> created Table: RPT_UD10")

    cur.close()

try:
    sfConnect = snowflake.connector.connect(
                user=sfUser,
                password=sfPswd,
                account=sfAccount,
                role=sfRole,
                warehouse=sfWarehouse,
                database=sfDatabase,
                schema=sfSchema
                ) 

    create_db(sfConnect)
    create_schema(sfConnect)
    create_warehouse(sfConnect)
    create_tables(sfConnect)

finally:
    if 'sfConnect' in locals():
        sfConnect.close()
        print("==> connection closed")

